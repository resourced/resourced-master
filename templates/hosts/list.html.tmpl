{{define "second-navbar"}}
<nav class="navbar navbar-default hosts">
    <div class="container">
        <div class="form-group">
            <form class="navbar-form" role="search" action="/">
                <input type="hidden" name="interval">

                <div class="col-lg-9 col-md-9 col-sm-8 col-xs-6" style="padding: 0">
                    <input id="search-input" name="q" type="text" class="form-control" placeholder="Example: /uptime.LoadAvg1m > 10">
                </div>

                <div class="col-lg-2 col-md-2 col-sm-2 col-xs-4" style="padding: 0">
                    <div class="input-group">
                        <span class="input-group-addon">last</span>
                        <input name="intervalNumber" type="number" class="form-control col-lg-6" value="1">
                    </div>
                </div>

                <div class="col-lg-1 col-md-1 col-sm-2 col-xs-2" style="padding: 0">
                    <select class="form-control" style="width: 100%" name="intervalUnit">
                        <option value="m">minutes</option>
                        <option value="h" selected>hours</option>
                    </select>
                </div>

                <button type="submit" class="btn btn-primary btn-block">Search</button>
            </form>
        </div>
    </div>
</nav>

<script>
$(window).load(function() {
    var qValue = ResourcedMaster.url.getParams('q');
    if(qValue) {
        qValue = qValue.replace(/\+/g, ' ');
        $('[name="q"]').val(decodeURIComponent(qValue));
        $('form[action="/saved-queries"]').removeClass('hidden');
    }

    // On load, cp search input to saved-queries input.
    $('#saved-queries-input').val($('#search-input').val());

    var interval = ResourcedMaster.url.getParams('interval');

    if(interval) {
        if(interval.endsWith('h')) {
            $('select[name="intervalUnit"]').val('h');
        } else if (interval.endsWith('m')) {
            $('select[name="intervalUnit"]').val('m');
        }

        var intervalNumber = parseInt(interval);
        if(intervalNumber && intervalNumber > 0) {
            $('input[name="intervalNumber"]').val(intervalNumber);
        }
    }
});

// This catches keyup, onchange, and paste events.
// cp search input to saved-queries input
$('#search-input').bind('input propertychange', function(e) {
    $('#saved-queries-input').val($(this).val());
});

$('form[role="search"]').submit(function(e) {
    e.preventDefault();
    var query = $(this).find('input[name="q"]').val();
    var intervalNumber = $(this).find('input[name="intervalNumber"]').val();
    var intervalUnit = $(this).find('select[name="intervalUnit"]').val();

    if(!intervalNumber) {
        intervalNumber = '1';
    }
    if(!intervalUnit) {
        intervalUnit = h;
    }

    document.location = '/?q=' + query + '&interval=' + intervalNumber + intervalUnit;
});
</script>
{{ end }}

{{define "content"}}
<!-- Saved Queries -->
<div class="container saved-queries">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <div class="pull-right">
                    <small class="updated-queries-toggle">Show All</small>
                    <input type="checkbox" class="toggler toggler-header pull-right" data-size="mini">

                    <form class="navbar-form hidden" action="/saved-queries" method="post" style="padding-right: 0">
                        <input type="hidden" name="gorilla.csrf.Token" value="{{ $.CSRFToken }}">
                        <input id="saved-queries-input" name="SavedQuery" type="hidden">
                        <input name="Type" type="hidden" value="hosts">

                        <button type="submit" class="btn btn-primary">Save Current Query</button>
                    </form>
                </div>

                <h2>Saved Queries</h2>
            </div>
        </div>
    </div>

    {{ range $i, $savedQuery := .SavedQueries }}
    <div class="row saved-queries" style="{{ if lt $i 5 }}display: block{{ else }}display: none{{ end }}">
        <div class="col-xs-12 col-lg-12">
            <div>
                <div class="pull-right">
                    <a href="?q={{ $savedQuery.Query }}" type="submit" class="btn btn-default">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </a>

                    <a href="//{{ $.AccessToken.Token }}:@{{ $.Addr }}/api/hosts?q={{ $savedQuery.Query }}" type="submit" class="btn btn-success">
                       JSON
                    </a>

                    <form action="/saved-queries/{{ $savedQuery.ID }}" method="post">
                        <input type="hidden" name="gorilla.csrf.Token" value="{{ $.CSRFToken }}">
                        <input type="hidden" name="_method" value="delete">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>

                <h3>{{ $savedQuery.Query }}</h3>
            </div>
        </div>
    </div>
    {{ end }}
</div>

{{ if eq (len .Hosts) 0 }}
<div class="container" style="margin-top: 40px">
    <div class="jumbotron">
        <h2 style="margin-top: 0">Welcome to ResourceD</h2>
        <p>If you haven't already, configure your agents using access tokens defined <a href="/clusters">here</a>.</p>
    </div>
</div>
{{ else }}
<!-- Hosts -->
<div class="container hosts">
    <div class="row">
        <div class="col-lg-12">
            <div class="page-header">
                <h2><a href="/hosts">Hosts</a></h2>
            </div>
        </div>
    </div>

    {{ range $host := .Hosts }}
    {{ if ne $host.Hostname "" }}
    <div class="row hosts hosts-{{ $host.ID }}">
        <div class="col-xs-12 col-lg-12">
            <div>
                <div class="pull-right">
                    <small class="updated-timestamp time-unix-to-local">{{ $host.Updated }}</small>
                    <a href="/hosts/{{ $host.ID }}" class="btn btn-xs btn-success btn-header pull-right">Details</a>
                </div>

                <div class="host-name">
                    <h3><a href="/hosts/{{ $host.ID}}" %>{{ $host.Hostname }}</a></h3>
                </div>
            </div>

            <div>
                <div class="pull-right">
                    <button class="btn btn-xs btn-success btn-header pull-right" data-toggle="modal" data-target="#tags-modal" data-id="{{ $host.ID }}" data-master-tags="{{ $host.GetMasterTagsString }}">
                        Edit Tags
                    </button>
                </div>

                {{ range $tagKey, $tagValue := $host.Tags }}
                <a class="label label-default" href="/?q=tags.{{ $tagKey }} %3D {{ $tagValue }}">{{ $tagKey }} : {{ $tagValue }}</a>
                {{ end }}

                {{ range $tagKey, $tagValue := $host.MasterTags }}
                <a class="label label-info" href="/?q=tags.{{ $tagKey }} %3D {{ $tagValue }}">{{ $tagKey }} : {{ $tagValue }}</a>
                {{ end }}
            </div>
        </div>
    </div>
    <hr>
    {{ end }}
    {{ end }}
</div>
{{ end }}

<!-- Tags Modal -->
<div class="modal fade" id="tags-modal" tabindex="-1" role="dialog" aria-labelledby="tags-details-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="tags-details-label">Server-side Tags</h4>
            </div>

            <form method="post" action="/hosts/:id/master-tags">
                <input type="hidden" name="gorilla.csrf.Token" value="{{ $.CSRFToken }}">
                <input type="hidden" name="_method" value="post">

                <div class="modal-body">
                    <div class="row form-group">
                        <div class="col-sm-12">
                            <small class="pull-right" style="font-size: 9px; font-style: italic; margin-top: 6px">(Format: key:value separated by newline)</small>
                            <label>Tags</label>
                            <textarea class="form-control" name="MasterTags" style="height: 300px" placeholder="Format: key:value separated by newline"></textarea>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
ResourcedMaster.globals.AccessToken = '{{ $.AccessToken.Token }}';

$(document).ready(function() {
    ResourcedMaster.metrics.get1dayEvents();

    $('.toggler').bootstrapSwitch();

    // Hide Saved Queries container if there are no save queries.
    if($('.row.saved-queries').length == 0) {
        $('.container.saved-queries').hide();
    }

    // Show all saved-queries if toggler is set to on.
    $('.container.saved-queries .toggler-header').each(function() {
        var elem = $(this);

        if($.localStorage.isSet('UIStore', '.container.saved-queries .toggler-header')) {
            elem.bootstrapSwitch('state', true, true);
            elem.closest('.container.saved-queries').find('.row.saved-queries').show();
        }
    });
});

$('.row.hosts .label, .row.saved-queries a').click(function(e) {
    e.preventDefault();

    var href = $(this).attr('href');
    var interval = ResourcedMaster.url.getParams('interval');

    if(interval) {
        href = href + '&interval=' + interval;
    } else {
        href = href + '&interval=1h';
    }

    document.location = href;
});

$('.container.saved-queries .toggler-header').on('switchChange.bootstrapSwitch', function(event, state) {
    if(state) {
        $(this).closest('.container.saved-queries').find('.row.saved-queries').show();
    } else {
        $(this).closest('.container.saved-queries').find('.row.saved-queries:gt(4)').hide();
    }

    $.localStorage.set('UIStore', '.container.saved-queries .toggler-header', state);
});

$('#tags-modal').on('show.bs.modal', function (event) {
    var button = $(event.relatedTarget);   // Button that triggered the modal
    var id = button.data('id');
    var masterTags = button.data('master-tags');

    var modal = $(this);

    if(masterTags) {
        var masterTagsString = '';

        for (var key in masterTags) {
            masterTagsString = masterTagsString + key + ':' + masterTags[key] + '\n';
        }

        modal.find('textarea').val(masterTagsString);
    }

    if(id) {
        modal.find('form').attr('action', '/hosts/' + id + '/master-tags');
    }
});
</script>
{{end}}
